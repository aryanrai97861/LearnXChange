{"ast":null,"code":"class WebSocketClient {\n  constructor() {\n    this.ws = null;\n    this.listeners = new Map();\n  }\n  connect(token = '0e417407f01e9ec5a2ed700d506cd249ca36be1c') {\n    if (this.ws) {\n      this.ws.close();\n    }\n    this.ws = new WebSocket(`ws://127.0.0.1:3001/${token}`);\n    this.ws.onopen = () => {\n      console.log('WebSocket Connected');\n      this.emit('connected', true);\n    };\n    this.ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        this.emit('message', data);\n      } catch (error) {\n        console.error('WebSocket message parse error:', error);\n      }\n    };\n    this.ws.onclose = () => {\n      console.log('WebSocket Disconnected');\n      this.emit('connected', false);\n      // Try to reconnect after 5 seconds\n      setTimeout(() => this.connect(token), 5000);\n    };\n    this.ws.onerror = error => {\n      console.error('WebSocket Error:', error);\n      this.emit('error', error);\n    };\n  }\n  send(message) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(typeof message === 'string' ? message : JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event).add(callback);\n  }\n  off(event, callback) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).delete(callback);\n    }\n  }\n  emit(event, data) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach(callback => callback(data));\n    }\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n\n// Create a singleton instance\nconst websocket = new WebSocketClient();\nexport default websocket;","map":{"version":3,"names":["WebSocketClient","constructor","ws","listeners","Map","connect","token","close","WebSocket","onopen","console","log","emit","onmessage","event","data","JSON","parse","error","onclose","setTimeout","onerror","send","message","readyState","OPEN","stringify","on","callback","has","set","Set","get","add","off","delete","forEach","disconnect","websocket"],"sources":["C:/Users/aryan/OneDrive/Desktop/Web development/projects/New_project/client/src/utils/websocket.js"],"sourcesContent":["class WebSocketClient {\r\n    constructor() {\r\n        this.ws = null;\r\n        this.listeners = new Map();\r\n    }\r\n\r\n    connect(token = '0e417407f01e9ec5a2ed700d506cd249ca36be1c') {\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n\r\n        this.ws = new WebSocket(`ws://127.0.0.1:3001/${token}`);\r\n\r\n        this.ws.onopen = () => {\r\n            console.log('WebSocket Connected');\r\n            this.emit('connected', true);\r\n        };\r\n\r\n        this.ws.onmessage = (event) => {\r\n            try {\r\n                const data = JSON.parse(event.data);\r\n                this.emit('message', data);\r\n            } catch (error) {\r\n                console.error('WebSocket message parse error:', error);\r\n            }\r\n        };\r\n\r\n        this.ws.onclose = () => {\r\n            console.log('WebSocket Disconnected');\r\n            this.emit('connected', false);\r\n            // Try to reconnect after 5 seconds\r\n            setTimeout(() => this.connect(token), 5000);\r\n        };\r\n\r\n        this.ws.onerror = (error) => {\r\n            console.error('WebSocket Error:', error);\r\n            this.emit('error', error);\r\n        };\r\n    }\r\n\r\n    send(message) {\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n            this.ws.send(typeof message === 'string' ? message : JSON.stringify(message));\r\n        } else {\r\n            console.error('WebSocket is not connected');\r\n        }\r\n    }\r\n\r\n    on(event, callback) {\r\n        if (!this.listeners.has(event)) {\r\n            this.listeners.set(event, new Set());\r\n        }\r\n        this.listeners.get(event).add(callback);\r\n    }\r\n\r\n    off(event, callback) {\r\n        if (this.listeners.has(event)) {\r\n            this.listeners.get(event).delete(callback);\r\n        }\r\n    }\r\n\r\n    emit(event, data) {\r\n        if (this.listeners.has(event)) {\r\n            this.listeners.get(event).forEach(callback => callback(data));\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.ws) {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n}\r\n\r\n// Create a singleton instance\r\nconst websocket = new WebSocketClient();\r\nexport default websocket; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}